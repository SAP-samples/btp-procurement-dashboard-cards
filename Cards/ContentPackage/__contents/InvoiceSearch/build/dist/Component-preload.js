//@ui5-bundle sap/ariba/InvoiceSearch/Component-preload.js
jQuery.sap.registerPreloadedModules({
"version":"2.0",
"modules":{
	"sap/ariba/InvoiceSearch/Component.js":function(){sap.ui.define(["sap/ui/core/UIComponent"],function(e){"use strict";var n=e.extend("sap.ariba.InvoiceSearch.Component",{onCardReady:function(e){this.card=e;e.getCombinedParameters();e.getManifestEntry("/sap.card")}});return n});
},
	"sap/ariba/InvoiceSearch/Main.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageBox"],function(e,t,i){"use strict";return e.extend("sap.ariba.InvoiceSearch.Main",{onInit:function(){var e=new t;var i=this.getOwnerComponent().card,a=i.getCombinedParameters().statuses;e.setData({statuses:JSON.parse(a)});this.getView().setModel(e,"statusList");this._initViewModel();var r=new t;this.getView().setModel(r,"invoices");r.refresh(true)},_initViewModel:function(){var e=new t({busy:false,invoiceIdFilter:null,invDateFilter:null,createdByMeFilter:null,statusFilter:null,supplierIdFilter:null});this.getView().setModel(e,"oViewModel")},_getFilter:function(e){var t=e.getCombinedParameters().realm,i="$filter=Realm eq '"+t+"'",a=this.getView().getModel("oViewModel");if(a.getProperty("/invoiceIdFilter")){i+=" and contains(InvoiceId,'"+a.getProperty("/invoiceIdFilter")+"')"}if(a.getProperty("/invDateFilter")){var r=(new Date).toISOString();switch(a.getProperty("/invDateFilter")){case"30days":var n=this._getDateInXDays(30);i+=" and (InvoiceDate_day ge "+r+" and InvoiceDate_day lt "+n+")";break;case"60days":var s=this._getDateInXDays(60);i+=" and (InvoiceDate_day ge "+r+" and InvoiceDate_day lt "+s+")";break;case"90days":var o=this._getDateInXDays(90);i+=" and (InvoiceDate_day ge "+r+" and InvoiceDate_day lt "+o+")";break;case"thisyear":var d=""+(new Date).getFullYear()+"-12-31T23:59:59.999Z";i+=" and (InvoiceDate_day ge "+r+" and InvoiceDate_day lt "+d+")";break}}if(a.getProperty("/statusFilter")){i+=" and ReconciliationStatus eq '"+a.getProperty("/statusFilter")+"'"}if(a.getProperty("/supplierIdFilter")){i+=" and Supplier_SupplierId eq '"+a.getProperty("/supplierIdFilter")+"'"}return i},onSearch:function(e){this.getView().getModel("oViewModel").setProperty("/busy",true);var t=this.getOwnerComponent().card,a=t.getCombinedParameters().searchResult;e.preventDefault();var r={sRealm:t.getCombinedParameters().realm,sFilter:this._getFilter(t),sParamUser:t.getCombinedParameters().user,bFilterOnUser:!!this.getView().getModel("oViewModel").getProperty("/createdByMeFilter"),sTop:a?"$top="+a:"",sOrderBy:"$orderby=InvoiceDate_day desc",sSelect:"$select=InvoiceId,Description,InvoiceDate_day,POId,Supplier_SupplierId,Commodity_CommodityId,ReconciliationStatus"};t.request({url:"{{destinations.wzcd}}/doSearchInvoices",dataType:"json",method:"POST",parameters:r,withCredentials:true,headers:{"Content-Type":"application/json",withCredentials:true}}).then(function(e){var t=this.getView().getModel("invoices");t.setData(e);t.refresh(true);this.getView().getModel("oViewModel").setProperty("/busy",false)}.bind(this)).catch(function(e){this.getView().getModel("oViewModel").setProperty("/busy",false);i.error("There was an error in retrieving data: "+e)}.bind(this))},_getDateInXDays:function(e){var t=new Date;return new Date(t.setDate(t.getDate()+e)).toISOString()},formatDate:function(e){return e&&e!=="1970-01-01T00:00:00Z"?e&&e.split("T")[0]:""},onListItemPress:function(e){var t=this.getOwnerComponent().card.getCombinedParameters().realm,i=this.getOwnerComponent().card.getCombinedParameters().datacenter,a=e.getSource().getBindingContext("invoices").getObject().InvoiceId;var r="https://"+i+".ariba.com/Buyer/Main/ad/webjumper?realm="+t+"&itemClassName=ariba.invoicing.core.InvoiceReconciliation&itemUniqueName="+a;sap.m.URLHelper.redirect(r,true)}})});
},
	"sap/ariba/InvoiceSearch/View.view.xml":'<mvc:View xmlns:core="sap.ui.core"\n          xmlns:mvc="sap.ui.core.mvc"\n          xmlns="sap.m"\n          xmlns:html="http://www.w3.org/1999/xhtml"\n          width="100%"\n          displayBlock="true"\n          controllerName="sap.ariba.InvoiceSearch.Main"><core:Fragment\n            fragmentName="sap.ariba.InvoiceSearch.fragments.ObjectHeaderFragment"\n            type="XML"/><core:Fragment\n            fragmentName="sap.ariba.InvoiceSearch.fragments.SearchResultFragment"\n            type="XML"/></mvc:View>\n',
	"sap/ariba/InvoiceSearch/dt/configuration.js":function(){sap.ui.define(["sap/ui/integration/Designtime"],function(a){"use strict";return function(){return new a({form:{items:{realm:{manifestpath:"/sap.card/configuration/parameters/realm/value",type:"string",translatable:false},datacenter:{manifestpath:"/sap.card/configuration/parameters/datacenter/value",type:"string",translatable:false},searchResult:{manifestpath:"/sap.card/configuration/parameters/searchResult/value",type:"integer",translatable:false},user:{manifestpath:"/sap.card/configuration/parameters/user/value",type:"string",translatable:false},statuses:{manifestpath:"/sap.card/configuration/parameters/statuses/value",type:"string",translatable:false}}},preview:{modes:"Abstract"}})}});
},
	"sap/ariba/InvoiceSearch/fragments/ObjectHeaderFragment.fragment.xml":'<core:FragmentDefinition\n        xmlns="sap.m"\n        xmlns:core="sap.ui.core"\n        xmlns:fb="sap.ui.comp.filterbar"\n><fb:FilterBar id="filterbar" showRestoreButton="true" reset="onReset" search="onSearch" useToolbar="false" showGoOnFB="true"><fb:filterGroupItems><fb:FilterGroupItem groupName="__$INTERNAL$" name="A" label="Invoice No" partOfCurrentVariant="true" visibleInFilterBar="true"><fb:control><SearchField id="searchField" value="{oViewModel>/invoiceIdFilter}" /></fb:control></fb:FilterGroupItem><fb:FilterGroupItem groupName="__$INTERNAL$" name="B" label="Invoice Date" partOfCurrentVariant="true" visibleInFilterBar="true"><fb:control><ComboBox selectedKey="{oViewModel>/invDateFilter}"><items><core:Item key="30days" text="Within 30 days" /><core:Item key="60days" text="Within 60 days" /><core:Item key="90days" text="Within 90 days" /><core:Item key="thisyear" text="Within this year" /></items></ComboBox></fb:control></fb:FilterGroupItem><fb:FilterGroupItem groupName="__$INTERNAL$" name="C" label="Owned by Me" partOfCurrentVariant="true" visibleInFilterBar="true"><fb:control><CheckBox selected="{oViewModel>/createdByMeFilter}" /></fb:control></fb:FilterGroupItem><fb:FilterGroupItem groupName="__$INTERNAL$" name="D" label="Status"><fb:control><ComboBox selectedKey="{oViewModel>/statusFilter}" items="{statusList>/statuses}"><core:Item key="{statusList>Key}" text="{statusList>Name}"/></ComboBox></fb:control></fb:FilterGroupItem><fb:FilterGroupItem groupName="__$INTERNAL$" name="E" label="Supplier Id"><fb:control><SearchField id="searchFieldSupplier" value="{oViewModel>/supplierIdFilter}" /></fb:control></fb:FilterGroupItem></fb:filterGroupItems></fb:FilterBar></core:FragmentDefinition>',
	"sap/ariba/InvoiceSearch/fragments/SearchResultFragment.fragment.xml":'<core:FragmentDefinition\n        xmlns="sap.m"\n        xmlns:core="sap.ui.core"\n><Table items="{invoices>/value}" busy="{oViewModel>/busy}"><columns><Column width=\'25%\'><Text text="Invoice No" /></Column><Column><Text text="Invoice Date" /></Column><Column><Text text="PO Id" /></Column><Column><Text text="Supplier Id" /></Column><Column><Text text="Commodity Id" /></Column><Column><Text text="Reconciliation Status" /></Column></columns><items><ColumnListItem\n                    type="Active"\n                    press="onListItemPress"><cells><ObjectIdentifier title="{invoices>InvoiceId}" text="{invoices>Description}" class="sapUiTinyMarginTopBottom" /><Text text="{path: \'invoices>InvoiceDate_day\', formatter: \'.formatDate\'}" /><Text text="{invoices>POId}" /><Text text="{invoices>Supplier_SupplierId}" /><Text text="{invoices>Commodity_CommodityId}" /><ObjectStatus text="{invoices>ReconciliationStatus}" \n                         state="{=${invoices>ReconciliationStatus} === \'Paid\'  ? \'Success\' : ${invoices>ReconciliationStatus} === \'Paying\'  ? \'Warning\' : ${invoices>ReconciliationStatus} === \'Reconciled\'? \'Warning\':\'Error\'}" /></cells></ColumnListItem></items></Table></core:FragmentDefinition>',
	"sap/ariba/InvoiceSearch/manifest.json":'{"_version":"1.15.0","sap.app":{"id":"sap.ariba.InvoiceSearch","type":"card","title":"Invoice Search","subTitle":"Based on SAP Ariba Invoices","applicationVersion":{"version":"1.0.2"}},"sap.ui":{"technology":"UI5","deviceTypes":{"desktop":true,"phone":true,"tablet":true},"icons":{"icon":"sap-icon://technical-object"}},"sap.ui5":{"rootView":{"viewName":"sap.ariba.InvoiceSearch.View","type":"XML","async":true,"id":"app"},"dependencies":{"minUI5Version":"1.38","libs":{"sap.m":{}}}},"sap.card":{"type":"Component","designtime":"dt/configuration","configuration":{"parameters":{"realm":{"value":"<realmName>","type":"string","label":"The realm to connect to."},"datacenter":{"value":"s1","type":"string","label":"The datacenter the realm belongs to (ie: s1 for us, s1-eu for eu...)"},"searchResult":{"value":5,"type":"integer","label":"Amount of Records displayed as the Search Result"},"user":{"value":"","type":"string","label":"UserID for selection on \'Select Mine\' (For Test purpose only)","description":"For Test purpose only"},"statuses":{"value":"[{\\"Key\\":\\"Approving\\",\\"Name\\":\\"Approving\\"},{\\"Key\\":\\"Approved\\",\\"Name\\":\\"Approved\\"},{\\"Key\\":\\"Paid\\",\\"Name\\":\\"Paid\\"},{\\"Key\\":\\"Paying\\",\\"Name\\":\\"Paying\\"},{\\"Key\\":\\"Reconciled\\",\\"Name\\":\\"Reconciled\\"},{\\"Key\\":\\"Reconciling\\",\\"Name\\":\\"Reconciling\\"}]","type":"string","label":"List of Invoice Status for filtering","description":"List of Invoice Status for filtering"}},"destinations":{"wzcd":{"name":"Work-Zone-Cards-Data"}}},"header":{"icon":{"src":"sap-icon://search"},"title":"Invoice Search","subTitle":"Based on SAP Ariba Invoices"}},"sap.platform.mobilecards":{"compatible":false}}'
}});
